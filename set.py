# """ Множества (set):

# Неупорядоченные коллекции уникальных элементов.
# Примеры: """

# my_set = {1, 2, 'apple', 3.14}

# #add(): Добавляет элемент в множество.

# my_set = {1, 2, 3}
# my_set.add(4)  # my_set = {1, 2, 3, 4}


# #remove(): Удаляет элемент из множества; если элемента нет, вызывает ошибку

# numbers = {1, 2, 3, 4}
# numbers.remove(3)  # numbers = {1, 2, 4} 


# #union(): Объединение двух множеств.

# set1 = {1, 2, 3}
# set2 = {3, 4, 5}
# union_set = set1.union(set2)  # union_set = {1, 2, 3, 4, 5}


# #intersection(): Пересечение двух множеств.

# a = {1, 2, 3, 4}
# b = {3, 4, 5, 6}
# intersection_set = a.intersection(b)  # intersection_set = {3, 4}


# #pop(): Удаляет и возвращает случайный элемент из множества.

# colors = {'red', 'green', 'blue'}
# removed_color = colors.pop()  # removed_color is a random element


# #discard(): Удаляет элемент из множества, если он присутствует.

# my_set = {1, 2, 3}
# my_set.discard(2)  # my_set = {1, 3}


# # Получение подкортежа с определенным диапазоном индексов.

# my_tuple = (10, 20, 30, 40, 50)
# subtuple = my_tuple[1:4]  # subtuple = (20, 30, 40)


# #Шаг среза для кортежа.

# # items = ('apple', 'orange', 'banana', 'grape')
# # sliced_items = items[::2]  # sliced_items = ('apple', 'banana')









# """ Задача: Объединение множеств

# 1. Создайте два множества и объедините их в третье множество. Выведите полученное множество.
# Задача: Пересечение множеств

# 2. Напишите программу, которая принимает два множества и выводит их пересечение.
# Задача: Удаление элемента из множества

# 3. Создайте множество. Удалите из него определенный элемент (если он существует) и выведите результат.
# Задача: Проверка подмножества

# 4. Напишите программу, которая проверяет, является ли одно множество подмножеством другого.
# Задача: Симметрическая разность

# 5. Создайте два множества и выведите их симметрическую разность (элементы, присутствующие только в одном из множеств).
# """



# #Ответы

# '1'
# set1 = {1, 2, 3}
# set2 = {3, 4, 5}
# union_set = set1.union(set2)
# print("Объединенное множество:", union_set)


# '2'
# set1 = {1, 2, 3}
# set2 = {3, 4, 5}
# intersection_set = set1.intersection(set2)
# print("Пересечение множеств:", intersection_set)


# '3'
# my_set = {1, 2, 3, 4}
# my_set.discard(3)
# print("Множество после удаления:", my_set)


# '4'
# set1 = {1, 2, 3, 4}
# set2 = {2, 3}
# is_subset = set2.issubset(set1)
# print("Является ли set2 подмножеством set1:", is_subset)


# '5'
# set1 = {1, 2, 3, 4}
# set2 = {3, 4, 5, 6}
# symmetric_difference = set1.symmetric_difference(set2)
# print("Симметрическая разность:", symmetric_difference)









# """
# Задача: Удаление элемента

# Создайте множество чисел. Удалите из него один элемент. Выведите результат.
# Задача: Добавление элемента

# Создайте множество строк. Добавьте к нему новую строку. Выведите результат.
# Задача: Срез множества

# Создайте множество чисел. Выведите его первые три элемента.
# Задача: Объединение множеств

# Создайте два множества. Объедините их в третье множество. Выведите результат.
# Задача: Замена элемента

# Создайте множество строк. Замените одну строку на новую. Выведите результат.
# """








# #Ответы

# 1
# my_set = {1, 2, 3, 4}
# my_set.discard(3)
# print("Результат:", my_set)


# 2
# my_set = {1, 2, 3}
# my_set.add(4)
# print("Результат:", my_set)


# 3
# my_set = {10, 20, 30, 40, 50}
# result_set = list(my_set)[:3]
# print("Результат:", result_set)


# 4
# set1 = {1, 2, 3}
# set2 = {3, 4, 5}
# union_set = set1.union(set2)
# print("Результат:", union_set)


# 5
# my_set = {"apple", "banana", "cherry"}
# my_set.remove("banana")
# my_set.add("orange")
# print("Результат:", my_set)



